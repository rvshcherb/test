{"version":3,"file":"main.0327fc981bf6d501f723.js","mappings":"gsBAAqBA,EAAY,WAC/B,SAAAA,EAAYC,EAASC,I,4FAAeC,CAAA,KAAAH,GACX,iBAAZC,IACTA,EAAUG,SAASC,cAAcJ,IAGnCK,KAAKC,eAAiBL,EAEtBI,KAAKE,SAAWF,KAAKE,SAASC,KAAKH,MAEnCA,KAAKI,SAAWT,EAChBK,KAAKK,YAAcL,KAAKI,SAASL,cAAc,gBAC/CC,KAAKK,YAAYC,iBAAiB,QAASN,KAAKE,SAClD,C,QAUC,O,EAVAR,G,EAAA,EAAAa,IAAA,WAAAC,MAED,SAASC,GAAK,IAAAC,EAAA,KACZD,EAAIE,iBAEAX,KAAKY,UACPC,cAAcb,KAAKY,UAErB,IAAME,EAAOd,KAAKK,YAAYG,MAC9BR,KAAKY,SAAWG,YAAW,kBAAML,EAAKT,eAAea,EAAK,GAAE,IAC9D,M,oEAACpB,CAAA,CAvB8B,G,gprECmBjC,IAAMsB,EAAW,SAACC,EAAQC,GAAO,OCf1B,SAAuBC,EAAMF,GAClC,IAAMG,EAAQH,EAAOI,QAAQ,UAAW,IACxC,OAAOF,EAAKG,WAAWF,EACzB,CDYsCG,CAAcL,EAAQM,aAAcP,ICVnE,SAAsBE,EAAMF,GACjC,IAAMG,EAAQH,EAAOQ,OAAOC,cAC5B,OAAOP,EAAKO,cAAcC,SAASP,EACrC,CDQKQ,CAAa,GAADC,OAAIX,EAAQY,WAAU,KAAAD,OAAIX,EAAQa,WAAad,EAAO,EEjBjEe,EAAc,IF2BY,WAC9B,SAAAC,EAAYtC,I,4FAASE,CAAA,KAAAoC,GACI,iBAAZtC,IACTA,EAAUG,SAASC,cAAcJ,IAGnCK,KAAKkC,OAASlC,KAAKkC,OAAO/B,KAAKH,MAC/BA,KAAKI,SAAWT,EAChBK,KAAKmC,OAAShB,CAChB,C,QA2BC,O,EA3BAc,G,EAAA,EAAA1B,IAAA,SAAAC,MAED,WACE,IACyB4B,EAD0CC,E,25BAAAC,CAArDtC,KAAKI,SAASmC,iBAAiB,uBACpB,IAAzB,IAAAF,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAAgBN,EAAA5B,MACRmC,QAGR,OAAAC,GAAAP,EAAAQ,EAAAD,EAAA,SAAAP,EAAAS,GAAA,CACF,GAAC,CAAAvC,IAAA,eAAAC,MAED,SAAauC,GAAO,IAAArC,EAAA,KAClBV,KAAKgD,SACLD,EAAME,SAAQ,SAACC,GACb,IAjDchC,EAiDRiC,EAhDH,oKAAPtB,QADkBX,EAiDcgC,GA7CiEE,QAAO,4FAAAvB,OACxDX,EAAQY,WAAU,KAAAD,OAAIX,EAAQa,WAAS,2DAAAF,OACzCX,EAAQM,aAAY,kCAAAK,OAC7CX,EAAQM,aAAY,wKA2CrCd,EAAKN,SAASiD,mBAAmB,YAAaF,EAChD,GACF,GAAC,CAAA5C,IAAA,cAAAC,MAED,WACER,KAAKsD,aAAatD,KAAKmC,OACzB,GAAC,CAAA5B,IAAA,SAAAC,MAED,SAAOM,GAEL,IAAMyC,EAAiBvC,EAASb,KAAK,KAAMW,GAC3Cd,KAAKsD,aCjEF,SAAkBE,EAAUD,GACjC,OAAOC,EAAStB,OAAOqB,EACzB,CD+DsBE,CAASzD,KAAKmC,OAAQoB,GAC1C,M,oEAACtB,CAAA,CApC6B,GE3BZ,CAAgB,iBACf,IAAIvC,EAAa,iBAAkBsC,EAAYE,QAEpEF,EAAY0B,a","sources":["webpack://regular-webpack-tpl/./src/components/filter-widget/filter-widget.js","webpack://regular-webpack-tpl/./src/components/contact-list/contact-list.js","webpack://regular-webpack-tpl/./src/js/filter.js","webpack://regular-webpack-tpl/./src/js/app.js"],"sourcesContent":["export default class FilterWidget {\n  constructor(element, filterHandler) {\n    if (typeof element === 'string') {\n      element = document.querySelector(element);\n    }\n\n    this._filterHandler = filterHandler;\n\n    this.onFilter = this.onFilter.bind(this);\n\n    this._element = element;\n    this._filterText = this._element.querySelector('.filter-text');\n    this._filterText.addEventListener('input', this.onFilter);\n  }\n\n  onFilter(evt) {\n    evt.preventDefault();\n\n    if (this._timeout) {\n      clearInterval(this._timeout);\n    }\n    const text = this._filterText.value;\n    this._timeout = setTimeout(() => this._filterHandler(text), 300);\n  }\n}\n","import './contact-list.css';\nimport data from './contact-list.json';\nimport { containsPhone, containsText, filterBy } from '../../js/filter';\n\nfunction renderItem(contact) {\n  return `\n    <li class=\"contact-list-item\">\n      <div class=\"contact-main\">\n        <img src=\"https://raw.githubusercontent.com/pixelastic/fakeusers/master/pictures/${contact.picture}\" class=\"contact-list-item-img\" alt=\"\">\n        <span class=\"contact-list-item-name\">${`${contact.first_name} ${contact.last_name}`}</span>\n        <span class=\"contact-list-item-phone\">${contact.phone_number}</span>\n        <a href=\"tel:${contact.phone_number}\" class=\"contact-list-item-action\">Звонок</a>\n      </div>\n      <div class=\"contact-list-item-details hidden\">Подробная информация о клиенте</div>\n    </li>\n  `;\n}\n\n// Вариант через bind из лекции\nconst filterCb = (search, contact) => containsPhone(contact.phone_number, search)\n  || containsText(`${contact.first_name} ${contact.last_name}`, search);\n\n// Вариант через замыкание\n// const filterCb = (search) => {\n//   return function(contact) {\n//     return containsPhone(contact.phone_number, search) ||\n//           containsText(contact.first_name + ' ' + contact.last_name, search)\n//   }\n// }\n\nexport default class ContactList {\n  constructor(element) {\n    if (typeof element === 'string') {\n      element = document.querySelector(element);\n    }\n\n    this.filter = this.filter.bind(this);\n    this._element = element;\n    this._users = data;\n  }\n\n  _clear() {\n    const items = this._element.querySelectorAll('.contact-list-item');\n    for (const child of items) {\n      child.remove();\n    }\n\n    // Array.from(this._element.children).forEach(child => child.remove())\n  }\n\n  _renderItems(items) {\n    this._clear();\n    items.forEach((user) => {\n      const itemHtml = renderItem(user);\n      this._element.insertAdjacentHTML('beforeend', itemHtml);\n    });\n  }\n\n  renderUsers() {\n    this._renderItems(this._users);\n  }\n\n  filter(text) {\n    // const filterCallback = filterCb(text) //вариант через замыкание\n    const filterCallback = filterCb.bind(null, text); // вариант через bind, заготовка сверху\n    this._renderItems(filterBy(this._users, filterCallback));\n  }\n}\n","export function filterBy(contacts, filterCallback) {\n  return contacts.filter(filterCallback);\n}\n\nexport function containsPhone(data, search) {\n  const clean = search.replace(/[+ ()]/g, ''); // удаляем +; ' ' и т.д.\n  return data.startsWith(clean);\n}\n\nexport function containsText(data, search) {\n  const clean = search.trim().toLowerCase();\n  return data.toLowerCase().includes(clean);\n}\n","import FilterWidget from '../components/filter-widget/filter-widget';\nimport ContactList from '../components/contact-list/contact-list';\n\nconst contactList = new ContactList('.contact-list');\nconst filterWidget = new FilterWidget('.filter-widget', contactList.filter);\n\ncontactList.renderUsers();\n"],"names":["FilterWidget","element","filterHandler","_classCallCheck","document","querySelector","this","_filterHandler","onFilter","bind","_element","_filterText","addEventListener","key","value","evt","_this","preventDefault","_timeout","clearInterval","text","setTimeout","filterCb","search","contact","data","clean","replace","startsWith","containsPhone","phone_number","trim","toLowerCase","includes","containsText","concat","first_name","last_name","contactList","ContactList","filter","_users","_step","_iterator","_createForOfIteratorHelper","querySelectorAll","s","n","done","remove","err","e","f","items","_clear","forEach","user","itemHtml","picture","insertAdjacentHTML","_renderItems","filterCallback","contacts","filterBy","renderUsers"],"sourceRoot":""}